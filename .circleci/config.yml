# if this file ends in .yml, you should not edit it and edit circle.org instead.
version: 2

build_bundles_env: &build_bundles_env
  PERL_DIR: /opt/vanilla-perl
  PERL: /opt/vanilla-perl/bin/perl
  SYSTEM_PERL: /usr/bin/perl
  CARTON: /opt/vanilla-perl/bin/carton
  PERL5LIB: /build/local/lib/perl5
  PATH: /build/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin

jobs:
  upload:
    working_directory: /build
    docker:
      - image: alpine:latest
        environment:
          S3_BUCKET: moz-devservices-bmocartons
    steps:
      - run:
          command: |
            apk update
            apk add curl # installs ca certs
      - attach_workspace:
          at: /build/upload
      - run:
          name: install awscli
          command: |
            apk update
            apk add py-pip
            pip install awscli
      - run:
          working_directory: /build/upload
          command: |
            for file in */vendor.tar.gz; do
              aws s3 cp $file s3://$S3_BUCKET/$file;
            done
  centos6:
    working_directory: /build
    docker:
      - image: centos:6.9
        environment: 
          <<: *build_bundles_env
          NAME: bmo # named this for historical reasons
    steps:
      - checkout
      - run:
          name: install rpms
          command: /build/bundle/centos6/install-rpms
      - run:
          name: download some tools
          command: fetch-tools
      - run:
          name: copy cpanfile and cpanfile.snapshot
          command: cp bundle/$CIRCLE_JOB/cpanfile* .
      - restore_cache:
          name: restore vanilla perl cache
          key: v3-{{ .Environment.CIRCLE_JOB }}-perl
      - run:
          name: build a vanilla perl
          command: build-vanilla-perl
      - run:
          name: install carton
          command: install-carton
      - save_cache:
          name: save vanilla perl cache
          key: v3-{{ .Environment.CIRCLE_JOB }}-perl
          paths:
            - /opt/vanilla-perl
      - run:
          command: fetch-pari
      - restore_cache:
          name: restore vanilla carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-vanilla
      - run:
          command: $PERL $CARTON install
      - save_cache:
          name: save vanilla carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-vanilla
          paths:
            - /build/local
            - /build/vendor
      - run:
          name: patch Crypt::OpenPGP
          command: patch-crypt-openpgp
      - run:
            command: $PERL $CARTON bundle
      - run:
            command: $PERL $CARTON fatpack
      - run:
          name: remove vanilla perl modules
          command: rm -vfr local/lib/perl5
      - restore_cache:
          name: restore system carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-system
      - run:
          command: $SYSTEM_PERL ./vendor/bin/carton install --cached --deployment
      - save_cache:
          name: save system carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-system
          paths:
            - /build/local
            - /build/vendor
      - run:
          command: package-bundle
      - persist_to_workspace:
          root: /build/upload
          paths:
            - "*/vendor.tar.gz"
      - store_artifacts:
          path: '/root/.cpanm/work/*/build.log'
  ubuntu14:
    working_directory: /build
    docker:
      - image: ubuntu:14.04
        environment:
          <<: *build_bundles_env
          NAME: mozreview # named this for historical reasons
    steps:
      - checkout
      - run:
          command: cp /build/bundle/ubuntu14/mysql.list /etc/apt/sources.list.d/mysql.list
      - run:
          name: install dependencies
          command: |
            success=no
            (( i = 1 ))
            while (( ++i < 5 )); do
              apt-key adv --keyserver ha.pool.sks-keyservers.net \
                  --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 || continue
              apt-get update || continue
              apt-get --no-install-recommends -y install \
                  apache2 build-essential cvs g++ git graphviz libapache2-mod-perl2 \
                  libgd-dev libgmp3-dev libmysqlclient-dev libssl-dev curl \
                  mysql-client mysql-server patchutils pkg-config unzip wget || continue
              success=yes
              break
            done
            [[ $success == yes ]] || exit 1
      - run:
          name: download some tools
          command: fetch-tools
      - run:
          name: copy cpanfile and cpanfile.snapshot
          command: cp bundle/$CIRCLE_JOB/cpanfile* .
      - restore_cache:
          name: restore vanilla perl cache
          key: v3-{{ .Environment.CIRCLE_JOB }}-perl
      - run:
          name: build a vanilla perl
          command: build-vanilla-perl
      - run:
          name: install carton
          command: install-carton
      - save_cache:
          name: save vanilla perl cache
          key: v3-{{ .Environment.CIRCLE_JOB }}-perl
          paths:
            - /opt/vanilla-perl
      - run:
          command: fetch-pari
      - restore_cache:
          name: restore vanilla carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-vanilla
      - run:
          command: $PERL $CARTON install
      - save_cache:
          name: save vanilla carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-vanilla
          paths:
            - /build/local
            - /build/vendor
      - run:
          name: patch Crypt::OpenPGP
          command: patch-crypt-openpgp
      - run:
            command: $PERL $CARTON bundle
      - run:
            command: $PERL $CARTON fatpack
      - run:
          name: remove vanilla perl modules
          command: rm -vfr local/lib/perl5
      - restore_cache:
          name: restore system carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-system
      - run:
          command: $SYSTEM_PERL ./vendor/bin/carton install --cached --deployment
      - save_cache:
          name: save system carton local dir
          key: v3-{{ .Environment.CIRCLE_JOB }}-carton-system
          paths:
            - /build/local
            - /build/vendor
      - run:
          command: package-bundle
      - persist_to_workspace:
          root: /build/upload
          paths:
            - "*/vendor.tar.gz"
      - store_artifacts:
          path: '/root/.cpanm/work/*/build.log'
  bmo-base:
    working_directory: /build
    docker:
      - image: docker:17.06.1-ce
        environment:
          DOCKERHUB_REPO: mozillabteam/bmo-base
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: /build/upload
      - run:
          no_output_timeout: 20m
          working_directory: /build/docker/bmo-base
          command: |
            tar -zxf /build/upload/bmo/vendor.tar.gz bmo/vendor/ bmo/cpanfile bmo/cpanfile.snapshot
            docker build -t $DOCKERHUB_REPO:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKERHUB_REPO:latest
  bmo-ci:
    working_directory: /build
    docker:
      - image: docker:17.06.1-ce
        environment:
          DOCKERHUB_REPO: mozillabteam/bmo-ci
    steps:
      - setup_remote_docker
      - checkout
      - run:
          working_directory: /build/docker/bmo-ci
          command: |
            docker build -t $DOCKERHUB_REPO:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKERHUB_REPO:latest
      - run:
          command: docker run -ti $DOCKERHUB_REPO env GITHUB_BASE_BRANCH=production TEST_SUITE=sanity runtests.sh
  bmo-slim:
    working_directory: /build
    docker:
      - image: docker:17.06.1-ce
        environment:
          DOCKERHUB_REPO: mozillabteam/bmo-slim
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: /build/upload
      - run:
          working_directory: /build/docker/bmo-slim
          command: |
            tar -zxf /build/upload/bmo/vendor.tar.gz \
              bmo/vendor/bin \
              bmo/local \
              bmo/cpanfile \
              bmo/cpanfile.snapshot \
              bmo/LIBS.txt \
              bmo/PACKAGES.txt
            docker build -t $DOCKERHUB_REPO:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKERHUB_REPO:latest
  
  bundle-centos6:
    working_directory: /build
    docker:
      - image: docker:17.06.1-ce
        environment:
          DOCKERHUB_REPO: mozillabteam/bundle-centos6
    steps:
      - setup_remote_docker
      - checkout
      - run: apk --update add perl perl-yaml-xs
      - run: perl bin/job2dockerfile centos6 > Dockerfile
      - run:
          name: build docker container
          command: |
            docker build -t $DOCKERHUB_REPO:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKERHUB_REPO:latest
  

workflows:
  version: 2
  bundles:
    jobs:
      - centos6:
          filters:
            branches:
              only: master
      - ubuntu14:
          filters:
            branches:
              only: master
      - bundle-centos6:
          filters:
            branches:
              only: master
      - bmo-slim:
          filters:
            branches:
              only: master
          requires:
            - centos6
      - bmo-base:
          filters:
            branches:
              only: master
          requires:
            - centos6
      - bmo-ci:
          filters:
            branches:
              only: master
          requires:
            - bmo-base
      - upload:
          filters:
            branches:
              only: master
          requires:
            - centos6
            - ubuntu14
